// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Permutations
// https://leetcode.com/problems/permutations/
// 

class Solution {
    public List<List<Integer>> permute(int[] nums) {
        List<List<Integer>> results = new ArrayList<>();
        if (nums == null || nums.length == 0) {
            return results;
        }
        helper(new ArrayList<Integer>(), results, nums);
        return results;
    }
    private void helper(ArrayList<Integer> permutation,
                        List<List<Integer>> results,
                        int[] nums) {
        if (permutation.size() == nums.length) {
            results.add(new ArrayList<Integer>(permutation));
        }
        for (int i = 0; i < nums.length; i++) {
            if (permutation.contains(nums[i])) {
                continue;
            }
            permutation.add(nums[i]);
            helper(permutation, results, nums);
            permutation.remove(permutation.size() - 1);
        }
    }
}

