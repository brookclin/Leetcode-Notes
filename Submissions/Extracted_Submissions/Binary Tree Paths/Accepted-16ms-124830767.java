// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Binary Tree Paths
// https://leetcode.com/problems/binary-tree-paths/
// 

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
// divide and conquer
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> results = new ArrayList<>();
        // null
        if (root == null) {
            return results;
        }
        // leaf
        if (root.left == null && root.right == null) {
            results.add("" + root.val);
            return results;
        }
        // get left and right
        List<String> left = binaryTreePaths(root.left);
        List<String> right = binaryTreePaths(root.right);
        // loop thru left and right, add to result
        for (String path : left) {
            results.add(root.val + "->" + path);
        }
        for (String path : right) {
            results.add(root.val + "->" + path);
        }
        return results;
    }
}

