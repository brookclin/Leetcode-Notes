// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Binary Tree Longest Consecutive Sequence
// https://leetcode.com/problems/binary-tree-longest-consecutive-sequence/
// 

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    private int longest;
    public int longestConsecutive(TreeNode root) {
        longest = 0;
        helper(root);
        return longest;
    }
    private int helper(TreeNode root) {
        if (root == null) {
            return 0;
        }
        int left = helper(root.left);
        int right = helper(root.right);
        
        // int length = 1; // self
        // if (root.left != null && root.val + 1 == root.left.val) {
        //     length = Math.max(left + 1, length);
        // }
        // if (root.right != null && root.val + 1 == root.right.val) {
        //     length = Math.max(right + 1, length);
        // }
        if (root.left == null || root.val + 1 != root.left.val) {
            left = 0;
        }
        if (root.right == null || root.val + 1 != root.right.val) {
            right = 0;
        }
        int length = Math.max(left + 1, right + 1);
        if (length > longest) {
            longest = length;
        }
        return length;
    }
}

