// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Minimum Size Subarray Sum
// https://leetcode.com/problems/minimum-size-subarray-sum/
// 

class Solution {
    public int minSubArrayLen(int s, int[] nums) {
        if (nums == null || nums.length == 0) {
            return 0;
        }
        int ans = Integer.MAX_VALUE;
        int j = 0;
        int sum = 0;
        for (int i = 0; i < nums.length; i++) {
            while (j < nums.length && sum < s) {
                sum += nums[j];
                j++;
            }
            if (sum >= s) { // WA: 没加判断
                ans = Math.min(ans, j - i); // WA: j - i + 1; max
            }
            sum -= nums[i];
        }
        if (ans == Integer.MAX_VALUE) { // 没加判断
            ans = 0;
        }
        return ans;
    }
}

