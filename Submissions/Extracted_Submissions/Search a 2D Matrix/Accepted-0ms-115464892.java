// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Search a 2D Matrix
// https://leetcode.com/problems/search-a-2d-matrix/
// 

class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        if (matrix == null || matrix.length == 0 || matrix[0] == null || matrix[0].length == 0) {
            return false;
        }
        int row = matrix.length;
        int column = matrix[0].length;
        // find row
        int start = 0;
        int end = row - 1;
        int mid;
        int selectRow;
        while (start + 1 < end) {
            mid = start + (end - start) / 2;
            if (matrix[mid][0] == target) {
                return true;
            } else if (matrix[mid][0] < target) {
                start = mid;
            } else {
                end = mid;
            }
        }
        if (matrix[end][0] <= target) {
            selectRow = end;
        } else if (matrix[start][0] <= target) {
            selectRow = start;
        } else {
            return false;
        }
        
        start = 0;
        end = column - 1;
        while (start + 1 < end) {
            mid = start + (end - start) / 2;
            if (matrix[selectRow][mid] == target) {
                return true;
            } else if (matrix[selectRow][mid] < target) {
                start = mid;
            } else {
                end = mid;
            }
        }
        if (matrix[selectRow][start] == target || matrix[selectRow][end] == target) {
            return true;
        }
        return false;
    }
}

