// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Longest Substring Without Repeating Characters
// https://leetcode.com/problems/longest-substring-without-repeating-characters/
// 

class Solution {
    public int lengthOfLongestSubstring(String s) {
        if (s == null || s.length() == 0) {
            return 0;
        }
        int result = 0;
        // char -> Character
        // 1 WA: dvdf me:2 expected:3
        
        // i: left pointer, inclusive j: right pointer, exclusive
        HashMap<Character, Integer> hash = new HashMap<>();
        for (int i = 0, j = 0; j < s.length(); j++) {
            if (hash.containsKey(s.charAt(j))) {
                i = Math.max(i, hash.get(s.charAt(j)));
            } 
            hash.put(s.charAt(j), j + 1);
            result = Math.max(result, j - i + 1);
        }
        return result;
        
        // HashSet -> Hashtable
        // 2 TLE: very long string
        // int i = 0;
        // while (i < s.length()) {
        //     if (hash.containsKey(s.charAt(i))) {
        //         i = hash.get(s.charAt(i)) + 1;
        //         hash.clear();
        //         count = 0;
        //     }
        //     hash.put(s.charAt(i), i);
        //     count++;
        //     if (count > result) {
        //         result = count;
        //     }
        //     i++;
        // }
        // return result;
        
    }
}

