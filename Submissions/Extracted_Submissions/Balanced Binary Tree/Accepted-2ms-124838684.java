// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Balanced Binary Tree
// https://leetcode.com/problems/balanced-binary-tree/
// 

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

class Solution {
    class ResultType {
        public boolean isBalanced;
        public int maxDepth;
        public ResultType(boolean isBalanced, int depth) {
            this.isBalanced = isBalanced;
            this.maxDepth = depth;
        }
    }
    public boolean isBalanced(TreeNode root) {
        return helper(root).isBalanced;
    }

    public ResultType helper(TreeNode root) {
        if (root == null) {
            return new ResultType(true, 0);
        }
        ResultType left = helper(root.left);
        ResultType right = helper(root.right);

        if (left.isBalanced && right.isBalanced
                && Math.abs(left.maxDepth - right.maxDepth) <= 1) {
            return new ResultType(true, Math.max(left.maxDepth, right.maxDepth) + 1);
        }
        return new ResultType(false, 0);
    }
}

