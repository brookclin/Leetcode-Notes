// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Balanced Binary Tree
// https://leetcode.com/problems/balanced-binary-tree/
// 

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */

class Solution {
    class ReturnType {
        public boolean isBalanced;
        public int depth;
        public ReturnType(boolean isBalanced, int depth) {
            this.isBalanced = isBalanced;
            this.depth = depth;
        }
    }
    public boolean isBalanced(TreeNode root) {
        ReturnType result = helper(root);
        return result.isBalanced;
    }
    
    private ReturnType helper(TreeNode root) {
        if (root == null) {
            return new ReturnType(true, 0);
        }
        int depth = 0;
        ReturnType left = helper(root.left);
        ReturnType right = helper(root.right);
        
        if (!left.isBalanced || !right.isBalanced) {
            return new ReturnType(false, 0);
        }
        
        if (Math.abs(left.depth - right.depth) > 1) {
            return new ReturnType(false, 0);
        }
        
        return new ReturnType(true, Math.max(left.depth, right.depth) + 1);
        
    }
}

