// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Subsets II
// https://leetcode.com/problems/subsets-ii/
// 

class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        List<List<Integer>> results = new ArrayList<>();
        if (nums == null || nums.length == 0) {
            return results;
        }
        Arrays.sort(nums); // WA: 忘记sort
        helper(nums, 0, new ArrayList<Integer>(), results);
        return results;
    }
    private void helper(int nums[],
                        int startIndex,
                        ArrayList<Integer> subset,
                        List<List<Integer>> results) {
        results.add(new ArrayList<Integer>(subset));
        for (int i = startIndex; i < nums.length; i++) {
            if (i != 0 && nums[i] == nums[i - 1] && i > startIndex) { // 没加 i > startIndex： [[],[1],[1,2],[2]]
                continue;
            }
            subset.add(nums[i]);
            helper(nums, i + 1, subset, results);
            subset.remove(subset.size() - 1);
        }
    }
}

