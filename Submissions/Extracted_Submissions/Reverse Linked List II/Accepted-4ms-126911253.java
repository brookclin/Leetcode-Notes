// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Reverse Linked List II
// https://leetcode.com/problems/reverse-linked-list-ii/
// 

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode prev = dummy;

        for (int i = 1; i < m; i++) {
            prev = prev.next;
        }
        ListNode node1 = prev.next;
        ListNode curt = node1;
        ListNode nodekplus = curt.next;
        for (int i = m; i < n; i++) {
            ListNode temp = nodekplus.next;
            nodekplus.next = curt;
            curt = nodekplus;
            nodekplus = temp;
        }
        prev.next = curt;
        node1.next = nodekplus;
        
        return dummy.next;
    }
}

