// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Remove Duplicates from Sorted List II
// https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii/
// 

/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode deleteDuplicates(ListNode head) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode prev = dummy;
        ListNode fast = head;
        boolean flag = false;
        while (fast != null && fast.next != null) {
            flag = false; // 每次循环就重置
            while (fast != null && fast.next != null && fast.val == fast.next.val) {
                fast = fast.next;
                flag = true; // 进入重复出现状态就置为true
            }
            if (!flag) { // 3334445666 没进入重复的时候再把prev挪到5
                prev = fast;
            }
            prev.next = fast.next;
            fast = fast.next;
        }
        return dummy.next;
    }
}

