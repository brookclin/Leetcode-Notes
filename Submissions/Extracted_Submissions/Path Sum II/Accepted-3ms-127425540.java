// 
// Generated by fetch-leetcode-submission project on GitHub.
// https://github.com/gitzhou/fetch-leetcode-submission
// Contact Me: aaron67[AT]aaron67.cc
// 
// Path Sum II
// https://leetcode.com/problems/path-sum-ii/
// 

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> results = new ArrayList<>();
        if (root == null) {
            return results;
        }
        ArrayList<Integer> path = new ArrayList<>();
        path.add(root.val);
        // helper(root, root.val, sum, new ArrayList<Integer>(), results);
        helper(root, root.val, sum, path, results);
        return results;
    }
    public void helper(TreeNode root,
                       int subsum,
                       int sum,
                       ArrayList<Integer> subset,
                       List<List<Integer>> results) {
        if (root == null) {
            return;
        }
        if (root.left == null && root.right == null) {
            if (subsum == sum) {
                results.add(new ArrayList<Integer>(subset));
            }
        }
        if (root.left != null) {
            subset.add(root.left.val);
            helper(root.left, subsum + root.left.val, sum, subset, results);
            subset.remove(subset.size() - 1);
        }
        if (root.right != null) {
            subset.add(root.right.val);
            helper(root.right, subsum + root.right.val, sum, subset, results);
            subset.remove(subset.size() - 1);
        }
    }
}

